
from PyQt6.QtGui import QFont
from PyQt6.QtCore import Qt, QTimer
import os

class TestHostUI(QWidget):
    def __init__(self, bluez_logger, controller, interface, back_callback, bluetooth_device_manager, a2dp_manager):
        super().__init__()
        self.bluez_logger = bluez_logger
        self.controller = controller
        self.interface = interface
        self.back_callback = back_callback
        self.bluetooth_device_manager = bluetooth_device_manager
        self.a2dp_manager = a2dp_manager
        self.device_address_sink = None
        self.device_address_source = None
        self.test_application_clicked()

    def test_application_clicked(self):
        self.main_grid_layout = QGridLayout()

        bold_font = QFont()
        bold_font.setBold(True)
        self.profiles_list_widget = QListWidget()
        profiles_list_label = QLabel("List of Profiles:")
        profiles_list_label.setFont(bold_font)
        profiles_list_label.setStyleSheet("color:black")
        self.main_grid_layout.addWidget(profiles_list_label, 0, 0)
        self.profiles_list_widget.addItem("GAP")
        self.profiles_list_widget.setFont(bold_font)
        self.profiles_list_widget.setStyleSheet("border: 3px solid black;color: black;background: transparent;")
        self.profiles_list_widget.itemSelectionChanged.connect(self.profile_selected)
        self.profiles_list_widget.setFixedWidth(350)
        self.main_grid_layout.addWidget(self.profiles_list_widget, 1, 0, 2, 2)

        controller_details_widget = QWidget()
        controller_details_layout = QVBoxLayout()
        controller_details_widget.setStyleSheet("border: 2px solid black;color: black;background: transparent;")
        controller_details_widget.setFont(bold_font)
        self.main_grid_layout.addWidget(controller_details_widget, 3, 0, 8, 2)

        self.bluez_logger.get_controller_details(interface=self.interface)
        self.controller.name = self.bluez_logger.name
        self.controller.bd_address = self.bluez_logger.bd_address
        self.controller.link_policy = self.bluez_logger.link_policy
        self.controller.lmp_version = self.bluez_logger.lmp_version
        self.controller.link_mode = self.bluez_logger.link_mode
        self.controller.hci_version = self.bluez_logger.hci_version
        self.controller.manufacturer = self.bluez_logger.manufacturer

        controller_details_label = QLabel("Controller Details:")
        controller_details_label.setFont(bold_font)
        controller_details_layout.addWidget(controller_details_label)

        info_fields = [
            ("Controller Name:", self.controller.name),
            ("Controller Address:", self.controller.bd_address),
            ("Link Mode:", self.controller.link_mode),
            ("Link Policy:", self.controller.link_policy),
            ("HCI Version:", self.controller.hci_version),
            ("LMP Version:", self.controller.lmp_version),
            ("Manufacturer:", self.controller.manufacturer)
        ]

        for label, value in info_fields:
            layout = QHBoxLayout()
            lbl = QLabel(label)
            lbl.setFont(bold_font)
            layout.addWidget(lbl)
            val = QLabel(value)
            layout.addWidget(val)
            controller_details_layout.addLayout(layout)

        controller_details_widget.setLayout(controller_details_layout)
        controller_details_widget.setFixedWidth(350)

        self.profile_methods_layout = QVBoxLayout()
        self.profile_methods_widget = QWidget()
        self.profile_methods_widget.setLayout(self.profile_methods_layout)
        self.main_grid_layout.addWidget(self.profile_methods_widget, 2, 2, 8, 2)

        dump_logs_label = QLabel("Dump Logs:")
        dump_logs_label.setFont(bold_font)
        dump_logs_label.setStyleSheet("color: black;")
        self.main_grid_layout.addWidget(dump_logs_label, 0, 4)
        self.dump_logs_text_browser = QTabWidget()
        self.main_grid_layout.addWidget(self.dump_logs_text_browser, 1, 4, 10, 2)
        self.dump_logs_text_browser.setStyleSheet("border: 2px solid black;color: black; background-color: lightblue;")
        self.dump_logs_text_browser.setFixedWidth(400)

        self.bluetoothd_log_text_browser = QTextEdit()
        self.bluetoothd_log_text_browser.setFont(bold_font)
        self.bluetoothd_log_text_browser.setReadOnly(True)

        self.pulseaudio_log_text_browser = QTextEdit()
        self.pulseaudio_log_text_browser.setFont(bold_font)
        self.pulseaudio_log_text_browser.setReadOnly(True)

        self.hci_dump_log_text_browser = QTextEdit()
        self.hci_dump_log_text_browser.setFont(bold_font)
        self.hci_dump_log_text_browser.setReadOnly(True)

        self.dump_logs_text_browser.addTab(self.bluetoothd_log_text_browser, "Bluetoothd_Logs")
        self.dump_logs_text_browser.addTab(self.pulseaudio_log_text_browser, "Pulseaudio_Logs")
        self.dump_logs_text_browser.addTab(self.hci_dump_log_text_browser, "HCI_Dump_Logs")

        back_button = QPushButton("Back")
        back_button.setStyleSheet("font-size: 16px; padding: 6px;")
        back_button.clicked.connect(self.back_callback)
        back_button_layout = QHBoxLayout()
        back_button_layout.addWidget(back_button)
        back_button_layout.setAlignment(Qt.AlignmentFlag.AlignLeft)
        self.main_grid_layout.addLayout(back_button_layout, 11, 0, 1, 1)

        self.setLayout(self.main_grid_layout)

        QTimer.singleShot(200, self.start_logs)

    def start_logs(self):
        try:
            self.bluez_logger.start_bluetoothd_logs(self.bluetoothd_log_text_browser)
            self.bluez_logger.start_pulseaudio_logs(self.pulseaudio_log_text_browser)
            self.bluez_logger.start_dump_logs(interface=self.interface, log_text_browser=self.hci_dump_log_text_browser)
            print("[INFO] Logs started")
        except Exception as e:
            print(f"[ERROR] Failed to start logs: {e}")
